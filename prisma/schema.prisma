generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  firstName     String?
  lastName      String?
  email         String?
  password      String?
  emailVerified Boolean?      @default(false)
  createdAt     DateTime      @default(now())
  otpTokens     OtpToken[]
  certificates  Certificate[]
  enrollments   Enrollment[]
}

model Enrollment {
  id        Int      @id @default(autoincrement())
  userId    Int
  courseId  Int
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  course Course @relation(fields: [courseId], references: [id])

  @@unique([userId, courseId])
}

model Certificate {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  courseTitle String
  url         String?
  issuedAt    DateTime @default(now())
  userId      Int

  user User @relation(fields: [userId], references: [id])
}

model Course {
  id                Int     @id @default(autoincrement())
  img_url           String?
  youtube_url       String?
  certificate_type  String?
  duration          String?
  online_percent    String?
  slug              String? @unique
  rating            Float?
  original_price    String?
  discounted_price  String?
  discount_percent  String?
  title             String
  study_type        String?
  language          String?
  level             String?
  access            String?
  introduction_text String?
  first_skill       String?
  second_skill      String?
  third_skill       String?
  main_text         String?
  detail_text       String? @db.LongText
  conclusion_text   String?
  programId         Int?

  program        Program?        @relation(fields: [programId], references: [id])
  courseContents CourseContent[]
  enrollments    Enrollment[]
}

model CourseContent {
  id                 Int     @id @default(autoincrement())
  title              String?
  slug               String? @unique
  order_number       Int?
  icon_url           String?
  introduction_text  String? @db.LongText
  starting_paragraph String? @db.LongText
  body_paragraph     String? @db.LongText
  ending_paragraph   String? @db.LongText
  isCompleted        Boolean @default(false)
  courseId           Int?

  course  Course?  @relation(fields: [courseId], references: [id])
  lessons Lesson[]
}

model Lesson {
  id                Int     @id @default(autoincrement())
  title             String?
  slug              String? @unique
  order_number      Int
  key_takeaway_text String? @db.LongText
  isCompleted       Boolean @default(false)
  courseContentId   Int?

  courseContent  CourseContent?  @relation(fields: [courseContentId], references: [id])
  lessonContents LessonContent[]
}

model LessonContent {
  id           Int     @id @default(autoincrement())
  order_number Int?
  content_type String? //heading text space list image
  content      String? @db.LongText
  lessonId     Int?

  lesson Lesson? @relation(fields: [lessonId], references: [id])
}

model Reviews {
  id           Int     @id @default(autoincrement())
  reviewer_img String?
  rating       Float?
  name         String
  generation   String?
  course_name  String?
}

model Partner {
  id       Int     @id @default(autoincrement())
  logo_img String?
  name     String
}

model Assets {
  id        Int     @id @default(autoincrement())
  page      String?
  section   String?
  type      String?
  url       String?
  alt       String?
  entity_id Int?
}

model SiteContents {
  id        Int     @id @default(autoincrement())
  page      String?
  section   String?
  type      String?
  content   String?
  entity_id Int?
}

model Founder {
  id            Int     @id @default(autoincrement())
  founder_img   String?
  founder_quote String?
  founder_name  String
  social_link   String?
}

model FAQ {
  id            Int     @id @default(autoincrement())
  page          String?
  subtitle_icon String?
  section       String?
  subtitle      String?
  question      String
  answer        String
}

model Program {
  id                     Int     @id @default(autoincrement())
  program_icon           String?
  program_title          String
  slug                   String  @unique
  certificate_name       String?
  logo_url               String?
  certificate_img_url    String?
  duration_each_course   String?
  level                  String?
  additional_price       String?
  how_to_get             String?
  about_text             String? @db.LongText
  firstDesignedFor_text  String?
  secondDesignedFor_text String?
  thirdDesignedFor_text  String?

  courses Course[]
}

model SlideShows {
  id             Int     @id @default(autoincrement())
  img_url        String?
  title          String
  description    String?
  button_message String?
  route_link     String?
  is_active      Boolean @default(true)
}

model OtpToken {
  id        String   @id @default(uuid())
  token     String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}
